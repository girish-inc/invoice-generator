{
  "meta": {
    "project": "MERN Stack PDF Invoice Generator",
    "date": "2025-08-17",
    "prepared_by": "Generated by Software Development Manager"
  },
  "product_overview": "A full-stack MERN web application that allows users to register, log in, add products, and generate professional PDF invoices matching a Figma design for visual accuracy. The system uses JWT authentication, Redux for state management, and Puppeteer for PDF generation to deliver a seamless invoice creation experience.",
  "core_goals": [
    "Enable secure user registration and login with JWT authentication and password hashing.",
    "Allow users to add multiple products with quantity, rate, and automatic GST and total calculations.",
    "Generate and download professional-quality PDF invoices styled according to a Figma design sample.",
    "Maintain data persistence of users and invoices using MongoDB and Mongoose.",
    "Provide a responsive, pixel-perfect UI using Tailwind CSS and Shadcn/UI components.",
    "Ensure smooth navigation with protected routes and centralized API communication using TanStack Query."
  ],
  "key_features": [
    "User Authentication with registration, login, JWT-based session management and validation using React Hook Form and Zod schemas.",
    "Product Management enabling users to add products with fields for name, quantity, and rate, with live calculations for totals and GST.",
    "Invoice PDF Generation that sends product data to the backend, stores invoice records, and creates downloadable PDFs via Puppeteer rendering HTML templates.",
    "Responsive Navigation System with React Router including protected routes to secure pages.",
    "Centralized State Management using Redux Toolkit for authentication and product data.",
    "Reusable UI Components built with Shadcn/UI and Radix UI for consistent styling and accessibility.",
    "Backend Express server with secure endpoints, database connection, and error handling.",
    "Comprehensive form validation on all user inputs for data integrity.",
    "Mobile-first responsive design ensuring usability across devices."
  ],
  "user_flow_summary": [
    "User visits Login page, enters email and password, and logs in successfully or sees validation errors.",
    "New users navigate to Registration page, enter details, validate inputs, and get redirected to Login on success.",
    "Logged-in users access the Add Product page, input product details, view automatic total and GST calculations, and can add multiple products.",
    "Users proceed to Generate PDF page, review product list, trigger PDF generation which saves invoice data on the server and downloads the styled PDF invoice.",
    "Navigation components ensure users move smoothly between Login, Register, Add Products, and Generate PDF pages while protecting routes from unauthorized access."
  ],
  "validation_criteria": [
    "Email and password fields validate using regex and Zod schema with appropriate user feedback on errors.",
    "Product calculations for total and GST are correct for multiple entries and update dynamically.",
    "PDF invoices generated match the Figma design visually and contain accurate product data with correct totals and GST.",
    "User authentication flows enforce JWT token validation and session management to secure protected routes.",
    "Responsive UI displays correctly on desktop and mobile devices matching pixel-perfect design.",
    "Server endpoints handle data storage, retrieval, and PDF generation with error handling and security safeguards."
  ],
  "code_summary": {
    "tech_stack": [
      "TypeScript",
      "React",
      "Node.js",
      "Express.js",
      "MongoDB",
      "Mongoose",
      "Vite",
      "Tailwind CSS",
      "Redux Toolkit",
      "React Router",
      "React Hook Form",
      "TanStack Query",
      "Zod",
      "JWT",
      "Bcrypt",
      "Puppeteer",
      "Shadcn/UI",
      "Radix UI",
      "Lucide React"
    ],
    "features": [
      {
        "name": "User Authentication",
        "description": "Complete user registration and login system with JWT tokens, password hashing, and session management",
        "files": [
          "server/controllers/authController.ts",
          "server/routes/authRoutes.ts",
          "server/models/User.ts",
          "server/middleware/authMiddleware.ts",
          "src/pages/Login.tsx",
          "src/pages/Register.tsx",
          "src/store/authSlice.ts",
          "src/utils/apiClient.ts"
        ]
      },
      {
        "name": "Product Management",
        "description": "Add, store, and manage products with name, quantity, and rate using Redux state management",
        "files": [
          "src/pages/AddProducts.tsx",
          "src/store/productSlice.ts",
          "src/components/ui/input.tsx",
          "src/components/ui/button.tsx",
          "src/components/ui/card.tsx"
        ]
      },
      {
        "name": "Invoice Generation",
        "description": "Generate professional PDF invoices with automated calculations, GST, and company branding",
        "files": [
          "src/pages/GeneratePDF.tsx",
          "server/controllers/pdfController.ts",
          "server/routes/pdfRoutes.ts",
          "server/models/Invoice.ts"
        ]
      },
      {
        "name": "PDF Generation Service",
        "description": "Backend service using Puppeteer to convert HTML templates to professional PDF invoices",
        "files": [
          "server/controllers/pdfController.ts",
          "server/routes/pdfRoutes.ts"
        ]
      },
      {
        "name": "Navigation System",
        "description": "React Router-based navigation with protected routes and responsive navigation bar",
        "files": [
          "src/App.tsx",
          "src/components/Navbar.tsx",
          "src/pages/Home.tsx"
        ]
      },
      {
        "name": "State Management",
        "description": "Redux Toolkit store for managing authentication state and product data across the application",
        "files": [
          "src/store/store.ts",
          "src/store/authSlice.ts",
          "src/store/productSlice.ts"
        ]
      },
      {
        "name": "API Client",
        "description": "Centralized HTTP client with TanStack Query for API communication and error handling",
        "files": [
          "src/utils/apiClient.ts",
          "src/hooks/useAuth.ts"
        ]
      },
      {
        "name": "UI Components",
        "description": "Reusable UI components built with Shadcn/UI and Radix primitives for consistent design",
        "files": [
          "src/components/ui/button.tsx",
          "src/components/ui/input.tsx",
          "src/components/ui/card.tsx",
          "src/components/ui/label.tsx",
          "src/components/ui/toast.tsx",
          "src/components/ui/toaster.tsx"
        ]
      },
      {
        "name": "Database Models",
        "description": "MongoDB models for User and Invoice data with Mongoose ODM integration",
        "files": [
          "server/models/User.ts",
          "server/models/Invoice.ts"
        ]
      },
      {
        "name": "Server Configuration",
        "description": "Express server setup with CORS, middleware, database connection, and route configuration",
        "files": [
          "server/server.ts",
          "server/config/database.ts",
          "server/middleware/authMiddleware.ts"
        ]
      },
      {
        "name": "Form Validation",
        "description": "React Hook Form with Zod schema validation for user inputs and data integrity",
        "files": [
          "src/pages/Login.tsx",
          "src/pages/Register.tsx",
          "src/pages/AddProducts.tsx"
        ]
      },
      {
        "name": "Responsive Design",
        "description": "Mobile-first responsive design using Tailwind CSS with custom styling and themes",
        "files": [
          "src/index.css",
          "src/App.css",
          "tailwind.config.js",
          "src/styles/globals.css"
        ]
      }
    ]
  }
}
